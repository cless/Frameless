; all variables above the first section are in the global space
global = value

; Required configuration settings for bootstrapping frameless
; controllerindex defines what argument in the arguments array that is passed to
; the framework should be used as controller (see Basecontroller::args)
; actioncontroller is the same but for the action
[bootstrap]
controllerindex     = 0
actionindex         = 1
defaultcontroller   = members

; This configuration is optional and instructs the bootstrap to remove a
; certain part from the start of the bootargs. This is useful when using
; nginx location blocks with $uri and try_files to rewrite the clean urls
; into the bootstrap file
;baseargs            = /frameless/

; Default arguments (see BaseController::args)
; can be used to set default values for arguments, it is possible to set the 
; default controller here but it is prefered to use the defaultcontroller variable
; in the bootstrap section
;
; syntax is:
; index = value
;
; example:
; 0 = english
[args.defaults]



; The base controller can handle the creation of sessions and these are some
; settings to manipulate how the session is created. All of these settings are
; optional and when they are not set the defaults from php.ini are used.
;
; name      the cookie name used for the session
; domain    the domain the session cookie is allowed on
; path      the path the session cookie is allowed on
; ssl       set this to true to enable secure only session cookies
; http      set this to true to enable HTTP only cookies (prevents javascript
;           from reading cookie values on browsers that support it)
; urandom   set this to true to use /dev/urandom to gather extra entropy to
;           to prevent people from guessing your session id
;
[session]
name            = frmsession
domain          = .example.org
path            = /
ssl             = true
http            = true
urandom         = true



; These are all virtual targets
;
; A virtual target is like a symlink for a controller
; You can use this to use other names for the controller class than for the url
; for example to access http://www.example.org/list/ and link it to the Members
; controller you can create a variable named 'list' with as value 'members'
; note that list is a reserved keyword in php, but can be used as a virtual target
;
; the syntax is:
; virtualname = realname
; 
[bootstrap.virtuals]
list = members
